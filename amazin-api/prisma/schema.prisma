datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  address   String?
  isSeller  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Order[]
  reviews   Review[]
  products  Product[]
}

model Department {
  id         Int        @id @default(autoincrement())
  name       String
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Category {
  id           Int         @id @default(autoincrement())
  name         String
  products     Product[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Department   Department? @relation(fields: [departmentId], references: [id])
  departmentId Int?
}

model Product {
  id              Int         @id @default(autoincrement())
  name            String
  price_cents     Int
  description     String
  image           String
  quantity        Int
  quantitySold    Int         @default(0)
  category        Category    @relation(fields: [categoryId], references: [id])
  categoryId      Int
  reviews         Review[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  OrderItem       OrderItem[]
  User            User?       @relation(fields: [userId], references: [id])
  userId          Int?
  isActive        Boolean     @default(true)
  isOnSale        Boolean     @default(false)
  discountPercent Int?
  saleStartDate   DateTime?
  saleEndDate     DateTime?
}

model Review {
  id          Int      @id @default(autoincrement())
  description String
  rating      Int
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
}

model Order {
  id         String      @id @default(uuid())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  orderItems OrderItem[]
  paymentId  Int
  total      Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}
